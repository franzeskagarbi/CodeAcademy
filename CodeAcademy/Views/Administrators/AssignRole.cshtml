@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<CodeAcademy.Models.User>

@{
    ViewData["Title"] = "Assign Roles";
}

<h2 class="text-center">Assign Roles</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="container">
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Username</th>
                <th scope="col">Email</th>
                <th scope="col">Current Role</th>
                <th scope="col">New Role</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                    <td id="roleTd_@user.Username">@user.Role</td>
                    <td>
                        <select id="user_NewRole_@user.Username" class="form-control">
                            <option value="Admin">Admin</option>
                            <option value="Student">Student</option>
                            <option value="Teacher">Teacher</option>
                        </select>
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary" onclick="assignRole('@user.Username')">Assign Role</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
<nav>
    @Html.PagedListPager(Model, page => Url.Action("AssignRole", new { page = page }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[] { "page-link" },
    LiElementClasses = new[] { "page-item" },
    UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,

})
</nav>
<br /><br /><br /><br /><br />
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    function assignRole(username) {
        var newRole = $('#user_NewRole_' + username).val();
        $.ajax({
            url: '/Administrators/AssignRole',
            method: 'POST',
            data: {
                username: username,
                newRole: newRole
            },
            success: function (data) {
                $('#roleTd_' + username).text(newRole);
                showSuccessMessage("Role assigned successfully");
                $('#assignButton_' + username).prop('disabled', true);

            },
            error: function (error) {
                console.error('Error assigning roles:', error);
            }
        });
    }

    function showSuccessMessage(message) {
        var successDiv = $('<div>').addClass('alert alert-success').text(message);
        $('body').prepend(successDiv);
        setTimeout(function () {
            successDiv.remove();
        }, 5000);
    }
</script>
