@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<CodeAcademy.Models.User>

@{
    ViewData["Title"] = "Users";
}

<h1>Users</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                Email
            </th>
            <th>
                Password
            </th>
            <th>
                Role
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Username">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Username">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Username">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
<nav>
    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[] { "page-link" },
    LiElementClasses = new[] { "page-item" },
    UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,

})
</nav>
