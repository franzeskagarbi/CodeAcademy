@model List<CodeAcademy.Models.CourseSection>

@{
    ViewData["Title"] = "View Sections";
    string courseTitle = ViewData["CourseTitle"]?.ToString();
    int courseId = ViewData["CourseId"] != null ? (int)ViewData["CourseId"] : 0;
}
@if (TempData["EnrollmentMessage"] != null)
{
    <div id="enrollmentMessage" class="alert alert-success temp-message">
        @TempData["EnrollmentMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div id="errorMessage" class="alert alert-danger temp-message">
        @TempData["ErrorMessage"]
    </div>
}

<style>
    .btn-custom {
        background-color: #a6a6a6;
        color: white;
        font-weight: bold;
    }

    .card-text {
        width: 1000px; /* Πλάτος του κειμένου */
    }

    .content {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .left-side {
        max-width: 50%;
        padding-right: 20px;
    }

    .right-side {
        max-width: 80%;
        padding-left: 20px;
        border-left: 1px solid #ccc;
    }

    .center {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>


<div class="content">
    <div class="left-side">
        <img src="~/images/developer.jpg" style="width:150px;height:150px;" alt="Developer Image" />
    </div>
    <div class="right-side">
        <h1 class="display-4">Sections: @courseTitle</h1>
    </div>
 </div>
@if (Model.Any())
{
    <div class="content">
        <div class="row justify-content-center">
            <div id="sectionsContainer">
                @foreach (var item in Model.OrderBy(s => s.SectionName))
                {
                    //var quiz = item.Quizzes?.FirstOrDefault(q => q.SectionId == item.SectionId);

                    <div class="col-md-4 section" style="display: none;">
                        <div class="row justify-content-center">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.SectionName)</h5>
                                <p class="card-text" style="white-space:pre-line">@Html.DisplayFor(modelItem => item.Description)</p>

                                <br />
                                <!--<a class="btn btn-primary " href="@Url.Action("DoQuiz", "Quiz", new { sectionId = item.SectionId })">Quiz</a> -->
                                
                                @if (item.SectionName.ToLower().Contains("final"))
                                {
                                    <a class="btn btn-success" href="@Url.Action("DoQuiz", "Quiz", new { sectionId = item.SectionId })">Final Quiz</a>
                                }
                                else
                                {
                                    <a class="btn btn-primary" href="@Url.Action("DoQuiz", "Quiz", new { sectionId = item.SectionId })">Quiz</a>
                                }
                                
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />
    <div class="text-center mt-4 center">
        <button id="nextButton" class="btn btn-primary">Next Section</button>
        <!--<button id="finalQuizButton" class="btn btn-success" style="display: none;" onclick="location.href='@Url.Action("FinalQuiz", "Quiz", new { courseId = courseId })'">Final Quiz</button>-->

    </div>
}
else
{
    <p>No sections available for this course yet.</p>
}



@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sections = document.querySelectorAll(".section");
            let currentIndex = 0;

            function showNextSection() {
                if (currentIndex < sections.length) {
                    sections[currentIndex].style.display = "none"; // Hide current section
                    currentIndex++;
                }

                if (currentIndex < sections.length) {
                    sections[currentIndex].style.display = "block"; // Show next section
                }

                if (currentIndex === sections.length - 1) {
                    document.getElementById("nextButton").style.display = "none"; // Hide next button on last section
                    //document.getElementById("finalQuizButton").style.display = "block"; // Show final quiz button on last section

                }

                if (currentIndex === sections.length) {
                    document.getElementById("nextButton").style.display = "none"; // Hide next button on last section
                    //document.getElementById("finalQuizButton").style.display = "block"; // Show final quiz button on last section
                }
                // Debugging: Log currentIndex and sections length
                console.log("Current Index:", currentIndex);
                console.log("Sections Length:", sections.length);
            }

            document.getElementById("nextButton").addEventListener("click", showNextSection);


            // Initially show the first section
            if (sections.length > 0) {
                sections[0].style.display = "block";
            }

            // Hide next button if there's only one section
            if (sections.length <= 1) {
                document.getElementById("nextButton").style.display = "none";
                //document.getElementById("finalQuizButton").style.display = "block";

            }
            console.log("Initial Sections Length:", sections.length);

        });

        //function to stop showing the message after redirecting to the page
        $(document).ready(function () {
            // Hide the messages after 10 seconds
            setTimeout(function () {
                $('.temp-message').fadeOut('slow');
            }, 10000); // 10,000 milliseconds = 10 seconds
        });
    </script>
}

<br />
<br />
<br />
<br />